/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AppAdminImport } from './routes/_app/_admin'
import { Route as AuthResetPasswordIndexImport } from './routes/_auth/reset-password.index'
import { Route as AppSectorsIndexImport } from './routes/_app/sectors.index'
import { Route as AppScreenerIndexImport } from './routes/_app/screener.index'
import { Route as AppJournalIndexImport } from './routes/_app/journal.index'
import { Route as AuthResetPasswordResetIdImport } from './routes/_auth/reset-password.$resetId'
import { Route as AuthActivateAccountActivateIdImport } from './routes/_auth/activate-account.$activateId'
import { Route as AppJournalTagsImport } from './routes/_app/journal.tags'
import { Route as AppJournalCalendarImport } from './routes/_app/journal.calendar'
import { Route as AppJournalAddImport } from './routes/_app/journal.add'
import { Route as AppJournalAccountsImport } from './routes/_app/journal.accounts'

// Create Virtual Routes

const AppAccountIndexLazyImport = createFileRoute('/_app/account/')()
const AppChartsSymbolLazyImport = createFileRoute('/_app/charts/$symbol')()
const AppAdminAdminUsersLazyImport = createFileRoute(
  '/_app/_admin/admin/users',
)()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppAdminRoute = AppAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountIndexLazyRoute = AppAccountIndexLazyImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/account.index.lazy').then((d) => d.Route),
)

const AuthResetPasswordIndexRoute = AuthResetPasswordIndexImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => AuthRoute,
} as any)

const AppSectorsIndexRoute = AppSectorsIndexImport.update({
  id: '/sectors/',
  path: '/sectors/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/sectors.index.lazy').then((d) => d.Route),
)

const AppScreenerIndexRoute = AppScreenerIndexImport.update({
  id: '/screener/',
  path: '/screener/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/screener.index.lazy').then((d) => d.Route),
)

const AppJournalIndexRoute = AppJournalIndexImport.update({
  id: '/journal/',
  path: '/journal/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/journal.index.lazy').then((d) => d.Route),
)

const AppChartsSymbolLazyRoute = AppChartsSymbolLazyImport.update({
  id: '/charts/$symbol',
  path: '/charts/$symbol',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/charts.$symbol.lazy').then((d) => d.Route),
)

const AuthResetPasswordResetIdRoute = AuthResetPasswordResetIdImport.update({
  id: '/reset-password/$resetId',
  path: '/reset-password/$resetId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthActivateAccountActivateIdRoute =
  AuthActivateAccountActivateIdImport.update({
    id: '/activate-account/$activateId',
    path: '/activate-account/$activateId',
    getParentRoute: () => AuthRoute,
  } as any)

const AppJournalTagsRoute = AppJournalTagsImport.update({
  id: '/journal/tags',
  path: '/journal/tags',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/journal.tags.lazy').then((d) => d.Route),
)

const AppJournalCalendarRoute = AppJournalCalendarImport.update({
  id: '/journal/calendar',
  path: '/journal/calendar',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/journal.calendar.lazy').then((d) => d.Route),
)

const AppJournalAddRoute = AppJournalAddImport.update({
  id: '/journal/add',
  path: '/journal/add',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/journal.add.lazy').then((d) => d.Route),
)

const AppJournalAccountsRoute = AppJournalAccountsImport.update({
  id: '/journal/accounts',
  path: '/journal/accounts',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/journal.accounts.lazy').then((d) => d.Route),
)

const AppAdminAdminUsersLazyRoute = AppAdminAdminUsersLazyImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AppAdminRoute,
} as any).lazy(() =>
  import('./routes/_app/_admin/admin.users.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/_admin': {
      id: '/_app/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppAdminImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/journal/accounts': {
      id: '/_app/journal/accounts'
      path: '/journal/accounts'
      fullPath: '/journal/accounts'
      preLoaderRoute: typeof AppJournalAccountsImport
      parentRoute: typeof AppImport
    }
    '/_app/journal/add': {
      id: '/_app/journal/add'
      path: '/journal/add'
      fullPath: '/journal/add'
      preLoaderRoute: typeof AppJournalAddImport
      parentRoute: typeof AppImport
    }
    '/_app/journal/calendar': {
      id: '/_app/journal/calendar'
      path: '/journal/calendar'
      fullPath: '/journal/calendar'
      preLoaderRoute: typeof AppJournalCalendarImport
      parentRoute: typeof AppImport
    }
    '/_app/journal/tags': {
      id: '/_app/journal/tags'
      path: '/journal/tags'
      fullPath: '/journal/tags'
      preLoaderRoute: typeof AppJournalTagsImport
      parentRoute: typeof AppImport
    }
    '/_auth/activate-account/$activateId': {
      id: '/_auth/activate-account/$activateId'
      path: '/activate-account/$activateId'
      fullPath: '/activate-account/$activateId'
      preLoaderRoute: typeof AuthActivateAccountActivateIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password/$resetId': {
      id: '/_auth/reset-password/$resetId'
      path: '/reset-password/$resetId'
      fullPath: '/reset-password/$resetId'
      preLoaderRoute: typeof AuthResetPasswordResetIdImport
      parentRoute: typeof AuthImport
    }
    '/_app/charts/$symbol': {
      id: '/_app/charts/$symbol'
      path: '/charts/$symbol'
      fullPath: '/charts/$symbol'
      preLoaderRoute: typeof AppChartsSymbolLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/journal/': {
      id: '/_app/journal/'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof AppJournalIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/screener/': {
      id: '/_app/screener/'
      path: '/screener'
      fullPath: '/screener'
      preLoaderRoute: typeof AppScreenerIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/sectors/': {
      id: '/_app/sectors/'
      path: '/sectors'
      fullPath: '/sectors'
      preLoaderRoute: typeof AppSectorsIndexImport
      parentRoute: typeof AppImport
    }
    '/_auth/reset-password/': {
      id: '/_auth/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexImport
      parentRoute: typeof AuthImport
    }
    '/_app/account/': {
      id: '/_app/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/_admin/admin/users': {
      id: '/_app/_admin/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AppAdminAdminUsersLazyImport
      parentRoute: typeof AppAdminImport
    }
  }
}

// Create and export the route tree

interface AppAdminRouteChildren {
  AppAdminAdminUsersLazyRoute: typeof AppAdminAdminUsersLazyRoute
}

const AppAdminRouteChildren: AppAdminRouteChildren = {
  AppAdminAdminUsersLazyRoute: AppAdminAdminUsersLazyRoute,
}

const AppAdminRouteWithChildren = AppAdminRoute._addFileChildren(
  AppAdminRouteChildren,
)

interface AppRouteChildren {
  AppAdminRoute: typeof AppAdminRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppJournalAccountsRoute: typeof AppJournalAccountsRoute
  AppJournalAddRoute: typeof AppJournalAddRoute
  AppJournalCalendarRoute: typeof AppJournalCalendarRoute
  AppJournalTagsRoute: typeof AppJournalTagsRoute
  AppChartsSymbolLazyRoute: typeof AppChartsSymbolLazyRoute
  AppJournalIndexRoute: typeof AppJournalIndexRoute
  AppScreenerIndexRoute: typeof AppScreenerIndexRoute
  AppSectorsIndexRoute: typeof AppSectorsIndexRoute
  AppAccountIndexLazyRoute: typeof AppAccountIndexLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAdminRoute: AppAdminRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppJournalAccountsRoute: AppJournalAccountsRoute,
  AppJournalAddRoute: AppJournalAddRoute,
  AppJournalCalendarRoute: AppJournalCalendarRoute,
  AppJournalTagsRoute: AppJournalTagsRoute,
  AppChartsSymbolLazyRoute: AppChartsSymbolLazyRoute,
  AppJournalIndexRoute: AppJournalIndexRoute,
  AppScreenerIndexRoute: AppScreenerIndexRoute,
  AppSectorsIndexRoute: AppSectorsIndexRoute,
  AppAccountIndexLazyRoute: AppAccountIndexLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthActivateAccountActivateIdRoute: typeof AuthActivateAccountActivateIdRoute
  AuthResetPasswordResetIdRoute: typeof AuthResetPasswordResetIdRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthActivateAccountActivateIdRoute: AuthActivateAccountActivateIdRoute,
  AuthResetPasswordResetIdRoute: AuthResetPasswordResetIdRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppAdminRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/journal/accounts': typeof AppJournalAccountsRoute
  '/journal/add': typeof AppJournalAddRoute
  '/journal/calendar': typeof AppJournalCalendarRoute
  '/journal/tags': typeof AppJournalTagsRoute
  '/activate-account/$activateId': typeof AuthActivateAccountActivateIdRoute
  '/reset-password/$resetId': typeof AuthResetPasswordResetIdRoute
  '/charts/$symbol': typeof AppChartsSymbolLazyRoute
  '/journal': typeof AppJournalIndexRoute
  '/screener': typeof AppScreenerIndexRoute
  '/sectors': typeof AppSectorsIndexRoute
  '/reset-password': typeof AuthResetPasswordIndexRoute
  '/account': typeof AppAccountIndexLazyRoute
  '/admin/users': typeof AppAdminAdminUsersLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AppAdminRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/journal/accounts': typeof AppJournalAccountsRoute
  '/journal/add': typeof AppJournalAddRoute
  '/journal/calendar': typeof AppJournalCalendarRoute
  '/journal/tags': typeof AppJournalTagsRoute
  '/activate-account/$activateId': typeof AuthActivateAccountActivateIdRoute
  '/reset-password/$resetId': typeof AuthResetPasswordResetIdRoute
  '/charts/$symbol': typeof AppChartsSymbolLazyRoute
  '/journal': typeof AppJournalIndexRoute
  '/screener': typeof AppScreenerIndexRoute
  '/sectors': typeof AppSectorsIndexRoute
  '/reset-password': typeof AuthResetPasswordIndexRoute
  '/account': typeof AppAccountIndexLazyRoute
  '/admin/users': typeof AppAdminAdminUsersLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/_admin': typeof AppAdminRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_app/': typeof AppIndexRoute
  '/_app/journal/accounts': typeof AppJournalAccountsRoute
  '/_app/journal/add': typeof AppJournalAddRoute
  '/_app/journal/calendar': typeof AppJournalCalendarRoute
  '/_app/journal/tags': typeof AppJournalTagsRoute
  '/_auth/activate-account/$activateId': typeof AuthActivateAccountActivateIdRoute
  '/_auth/reset-password/$resetId': typeof AuthResetPasswordResetIdRoute
  '/_app/charts/$symbol': typeof AppChartsSymbolLazyRoute
  '/_app/journal/': typeof AppJournalIndexRoute
  '/_app/screener/': typeof AppScreenerIndexRoute
  '/_app/sectors/': typeof AppSectorsIndexRoute
  '/_auth/reset-password/': typeof AuthResetPasswordIndexRoute
  '/_app/account/': typeof AppAccountIndexLazyRoute
  '/_app/_admin/admin/users': typeof AppAdminAdminUsersLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/journal/accounts'
    | '/journal/add'
    | '/journal/calendar'
    | '/journal/tags'
    | '/activate-account/$activateId'
    | '/reset-password/$resetId'
    | '/charts/$symbol'
    | '/journal'
    | '/screener'
    | '/sectors'
    | '/reset-password'
    | '/account'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/'
    | '/journal/accounts'
    | '/journal/add'
    | '/journal/calendar'
    | '/journal/tags'
    | '/activate-account/$activateId'
    | '/reset-password/$resetId'
    | '/charts/$symbol'
    | '/journal'
    | '/screener'
    | '/sectors'
    | '/reset-password'
    | '/account'
    | '/admin/users'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/_admin'
    | '/_auth/login'
    | '/_app/'
    | '/_app/journal/accounts'
    | '/_app/journal/add'
    | '/_app/journal/calendar'
    | '/_app/journal/tags'
    | '/_auth/activate-account/$activateId'
    | '/_auth/reset-password/$resetId'
    | '/_app/charts/$symbol'
    | '/_app/journal/'
    | '/_app/screener/'
    | '/_app/sectors/'
    | '/_auth/reset-password/'
    | '/_app/account/'
    | '/_app/_admin/admin/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/_admin",
        "/_app/",
        "/_app/journal/accounts",
        "/_app/journal/add",
        "/_app/journal/calendar",
        "/_app/journal/tags",
        "/_app/charts/$symbol",
        "/_app/journal/",
        "/_app/screener/",
        "/_app/sectors/",
        "/_app/account/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/activate-account/$activateId",
        "/_auth/reset-password/$resetId",
        "/_auth/reset-password/"
      ]
    },
    "/_app/_admin": {
      "filePath": "_app/_admin.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_admin/admin/users"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/journal/accounts": {
      "filePath": "_app/journal.accounts.tsx",
      "parent": "/_app"
    },
    "/_app/journal/add": {
      "filePath": "_app/journal.add.tsx",
      "parent": "/_app"
    },
    "/_app/journal/calendar": {
      "filePath": "_app/journal.calendar.tsx",
      "parent": "/_app"
    },
    "/_app/journal/tags": {
      "filePath": "_app/journal.tags.tsx",
      "parent": "/_app"
    },
    "/_auth/activate-account/$activateId": {
      "filePath": "_auth/activate-account.$activateId.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password/$resetId": {
      "filePath": "_auth/reset-password.$resetId.tsx",
      "parent": "/_auth"
    },
    "/_app/charts/$symbol": {
      "filePath": "_app/charts.$symbol.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/journal/": {
      "filePath": "_app/journal.index.tsx",
      "parent": "/_app"
    },
    "/_app/screener/": {
      "filePath": "_app/screener.index.tsx",
      "parent": "/_app"
    },
    "/_app/sectors/": {
      "filePath": "_app/sectors.index.tsx",
      "parent": "/_app"
    },
    "/_auth/reset-password/": {
      "filePath": "_auth/reset-password.index.tsx",
      "parent": "/_auth"
    },
    "/_app/account/": {
      "filePath": "_app/account.index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/_admin/admin/users": {
      "filePath": "_app/_admin/admin.users.lazy.tsx",
      "parent": "/_app/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
